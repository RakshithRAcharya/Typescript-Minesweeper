# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      region:
        description: "AWS Region"
        required: true
        default: "us-east-2"
#       bucketName:
#         description: "S3 Bucket Name"
#         required: true
      DNSName:
        description: "Domain Name"
        required: true
#       DBInstanceIdentifier:
#         description: "RDS Postgres Identifier"
#         required: true

jobs:
  cloudFormation-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from master branch
        uses: actions/checkout@v2
        
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}
#       - name: Create S3 Bucket with AWS CloudFormation
#         id: s3
#         uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
#         with:
#           name: s3-deploy
#           template: s3.yaml
#           parameter-overrides: BucketName=${{ github.event.inputs.bucketName }}
      - name: Deploy EC2 Instance from AWS CloudFormation
        id: ec2
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
        with:
          name: ec2-deploy
          template: ec2.yaml
#       - name: Deploy RDS Instance from AWS CloudFormation
#         id: rds
#         uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
#         with:
#           name: rds-deploy
#           template: db.yaml
#           parameter-overrides: DBInstanceIdentifier=${{ github.event.inputs.DBInstanceIdentifier }}
      - name: Create DNS Entry
        id: dns
        run: |
          curl -X 'PATCH' 'https://api.godaddy.com/v1/domains/onenine.cloud/records' \
            -H 'accept: application/json' \
            -H 'Content-Type: application/json' \
            -H 'Authorization: sso-key ${{ secrets.DNS_ACCESS_KEY }}:${{ secrets.DNS_SECRET_KEY }}' \
            --data '[{"type": "A","name": "${{ github.event.inputs.DNSName }}", "data": "${{ steps.ec2.outputs.InstanceIPAddress }}","ttl": 3600}]'
   
   
   
